---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: filesystems.efs.services.k8s.aws
spec:
  group: efs.services.k8s.aws
  names:
    kind: FileSystem
    listKind: FileSystemList
    plural: filesystems
    singular: filesystem
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.fileSystemID
      name: ID
      type: string
    - jsonPath: .spec.encrypted
      name: ENCRYPTED
      type: boolean
    - jsonPath: .spec.performanceMode
      name: PERFORMANCEMODE
      priority: 1
      type: string
    - jsonPath: .spec.throughputMode
      name: THROUGHPUTMODE
      priority: 1
      type: string
    - jsonPath: .status.provisionedThroughputInMiBps
      name: PROVISIONEDTHROUGHPUT
      priority: 1
      type: string
    - jsonPath: .status.sizeInBytes.value
      name: SIZE
      type: integer
    - jsonPath: .status.numberOfMountTargets
      name: MOUNTTARGETS
      type: integer
    - jsonPath: .status.lifeCycleState
      name: STATE
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FileSystem is the Schema for the FileSystems API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FileSystemSpec defines the desired state of FileSystem.
            properties:
              availabilityZoneName:
                type: string
              backup:
                type: boolean
              backupPolicy:
                description: |-
                  The backup policy for the file system used to create automatic daily backups.
                  If status has a value of ENABLED, the file system is being automatically
                  backed up. For more information, see Automatic backups (https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups).
                properties:
                  status:
                    type: string
                type: object
              encrypted:
                type: boolean
              fileSystemProtection:
                properties:
                  replicationOverwriteProtection:
                    type: string
                type: object
              kmsKeyID:
                type: string
              kmsKeyRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              lifecyclePolicies:
                items:
                  description: |-
                    Describes a policy used by lifecycle management that specifies when to transition
                    files into and out of storage classes. For more information, see Managing
                    file system storage (https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html).

                    When using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration
                    API action, Amazon EFS requires that each LifecyclePolicy object have only
                    a single transition. This means that in a request body, LifecyclePolicies
                    must be structured as an array of LifecyclePolicy objects, one object for
                    each transition. For more information, see the request examples in PutLifecycleConfiguration.
                  properties:
                    transitionToArchive:
                      type: string
                    transitionToIA:
                      type: string
                    transitionToPrimaryStorageClass:
                      type: string
                  type: object
                type: array
              performanceMode:
                type: string
              policy:
                type: string
              provisionedThroughputInMiBps:
                type: number
              tags:
                items:
                  description: |-
                    A tag is a key-value pair. Allowed characters are letters, white space, and
                    numbers that can be represented in UTF-8, and the following characters:+
                    - = . _ : /.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              throughputMode:
                type: string
            type: object
          status:
            description: FileSystemStatus defines the observed state of FileSystem
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              availabilityZoneID:
                description: |-
                  The unique and consistent identifier of the Availability Zone in which the
                  file system is located, and is valid only for One Zone file systems. For
                  example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web
                  Services Region, and it has the same location in every Amazon Web Services
                  account.
                type: string
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time that the file system was created, in seconds
                  (since 1970-01-01T00:00:00Z).
                format: date-time
                type: string
              fileSystemID:
                description: The ID of the file system, assigned by Amazon EFS.
                type: string
              lifeCycleState:
                description: The lifecycle phase of the file system.
                type: string
              name:
                description: |-
                  You can add tags to a file system, including a Name tag. For more information,
                  see CreateFileSystem. If the file system has a Name tag, Amazon EFS returns
                  the value in this field.
                type: string
              numberOfMountTargets:
                description: |-
                  The current number of mount targets that the file system has. For more information,
                  see CreateMountTarget.
                format: int64
                type: integer
              ownerID:
                description: The Amazon Web Services account that created the file
                  system.
                type: string
              sizeInBytes:
                description: |-
                  The latest known metered size (in bytes) of data stored in the file system,
                  in its Value field, and the time at which that size was determined in its
                  Timestamp field. The Timestamp value is the integer number of seconds since
                  1970-01-01T00:00:00Z. The SizeInBytes value doesn't represent the size of
                  a consistent snapshot of the file system, but it is eventually consistent
                  when there are no writes to the file system. That is, SizeInBytes represents
                  actual size only if the file system is not modified for a period longer than
                  a couple of hours. Otherwise, the value is not the exact size that the file
                  system was at any point in time.
                properties:
                  timestamp:
                    format: date-time
                    type: string
                  value:
                    format: int64
                    type: integer
                  valueInArchive:
                    format: int64
                    type: integer
                  valueInIA:
                    format: int64
                    type: integer
                  valueInStandard:
                    format: int64
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
