// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ReplicationConfigurationSpec defines the desired state of ReplicationConfiguration.
type ReplicationConfigurationSpec struct {

	// An array of destination configuration objects. Only one destination configuration
	// object is supported.
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	// +kubebuilder:validation:Required
	Destinations []*DestinationToCreate `json:"destinations"`
	// Specifies the Amazon EFS file system that you want to replicate. This file
	// system cannot already be a source or destination file system in another replication
	// configuration.
	//
	// Regex Pattern: `^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$`
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	SourceFileSystemID  *string                                  `json:"sourceFileSystemID,omitempty"`
	SourceFileSystemRef *ackv1alpha1.AWSResourceReferenceWrapper `json:"sourceFileSystemRef,omitempty"`
}

// ReplicationConfigurationStatus defines the observed state of ReplicationConfiguration
type ReplicationConfigurationStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// Describes when the replication configuration was created.
	// +kubebuilder:validation:Optional
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	// The Amazon Resource Name (ARN) of the original source EFS file system in
	// the replication configuration.
	// +kubebuilder:validation:Optional
	OriginalSourceFileSystemARN *string `json:"originalSourceFileSystemARN,omitempty"`
	// The Amazon Resource Name (ARN) of the current source file system in the replication
	// configuration.
	// +kubebuilder:validation:Optional
	SourceFileSystemARN *string `json:"sourceFileSystemARN,omitempty"`
	// ID of the Amazon Web Services account in which the source file system resides.
	//
	// Regex Pattern: `^(\d{12})|(\d{4}-\d{4}-\d{4})$`
	// +kubebuilder:validation:Optional
	SourceFileSystemOwnerID *string `json:"sourceFileSystemOwnerID,omitempty"`
	// The Amazon Web Services Region in which the source EFS file system is located.
	//
	// Regex Pattern: `^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-{0,1}[0-9]{0,1}$`
	// +kubebuilder:validation:Optional
	SourceFileSystemRegion *string `json:"sourceFileSystemRegion,omitempty"`
}

// ReplicationConfiguration is the Schema for the ReplicationConfigurations API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="SOURCEFS",type=string,priority=0,JSONPath=`.spec.sourceFileSystemId`
// +kubebuilder:printcolumn:name="REGION",type=string,priority=0,JSONPath=`.status.sourceFileSystemRegion`
// +kubebuilder:printcolumn:name="DESTINATIONS",type=integer,priority=0,JSONPath=`.spec.destinations`
// +kubebuilder:printcolumn:name="Synced",type="string",priority=0,JSONPath=".status.conditions[?(@.type==\"ACK.ResourceSynced\")].status"
// +kubebuilder:printcolumn:name="Age",type="date",priority=0,JSONPath=".metadata.creationTimestamp"
type ReplicationConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReplicationConfigurationSpec   `json:"spec,omitempty"`
	Status            ReplicationConfigurationStatus `json:"status,omitempty"`
}

// ReplicationConfigurationList contains a list of ReplicationConfiguration
// +kubebuilder:object:root=true
type ReplicationConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReplicationConfiguration `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ReplicationConfiguration{}, &ReplicationConfigurationList{})
}
